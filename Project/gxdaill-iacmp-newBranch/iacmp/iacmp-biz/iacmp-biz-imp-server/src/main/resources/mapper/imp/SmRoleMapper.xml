<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.northking.iacmp.imp.mapper.SmRoleMapper">

    <resultMap type="net.northking.iacmp.imp.domain.SmRole" id="SmRoleResult">
        <result property="id" column="ID"/>
        <result property="code" column="CODE"/>
        <result property="name" column="NAME"/>
        <result property="status" column="STATUS"/>
        <result property="type" column="TYPE"/>
        <result property="grad" column="GRAD"/>
        <result property="htmlContent" column="HTML_CONTENT"/>
        <result property="roleId" column="ROLE_ID"/>
    </resultMap>

    <sql id="selectSmRoleVo">
        select ID, CODE, NAME, STATUS, TYPE, GRAD, HTML_CONTENT, ROLE_ID from sm_role
    </sql>

    <select id="selectSmRoleList" resultMap="SmRoleResult">
        <include refid="selectSmRoleVo"/>
        <where>
            <if test="id != null  and id != '' ">and ID = #{id}</if>
            <if test="code != null  and code != '' ">and CODE = #{code}</if>
            <if test="name != null  and name != '' ">and NAME = #{name}</if>
            <if test="status != null ">and STATUS = #{status}</if>
            <if test="type != null  and type != '' ">and TYPE = #{type}</if>
            <if test="grad != null ">and GRAD = #{grad}</if>
            <if test="htmlContent != null  and htmlContent != '' ">and HTML_CONTENT = #{htmlContent}</if>
            <if test="roleId != null ">and ROLE_ID = #{roleId}</if>
            and code !='9999'
        </where>
        limit #{start},#{pageSize}
    </select>

    <select id="selectSmRoleCount" resultType="Integer">
        select count(1) from sm_role
        <where>
            <if test="id != null  and id != '' ">and ID = #{id}</if>
            <if test="code != null  and code != '' ">and CODE = #{code}</if>
            <if test="name != null  and name != '' ">and NAME = #{name}</if>
            <if test="status != null ">and STATUS = #{status}</if>
            <if test="type != null  and type != '' ">and TYPE = #{type}</if>
            <if test="grad != null ">and GRAD = #{grad}</if>
            <if test="htmlContent != null  and htmlContent != '' ">and HTML_CONTENT = #{htmlContent}</if>
            <if test="roleId != null ">and ROLE_ID = #{roleId}</if>
            and code !='9999'
        </where>
    </select>

    <select id="queryRolesForUser" resultType="Map">
        select id,code,name,status,type,role_id from sm_role
    </select>

    <select id="queryRolesByUser" resultMap="SmRoleResult">
        select id,code,name,status,type,role_id from sm_role a where a.id = (select role_id from sm_user_role where
        user_id=#{userId})
    </select>

    <select id="queryRoleByCode" resultMap="SmRoleResult">
        select id,code,name,status,type,role_id from sm_role where code = #{code}
    </select>

    <select id="queryRoleById" resultType="Map">
        select id,code,name,status,type,role_id from sm_role where id = #{id}
    </select>

    <select id="selectSmRoleById" parameterType="String" resultMap="SmRoleResult">
        <include refid="selectSmRoleVo"/>
        where ID = #{id}
    </select>

    <insert id="addRole">
        insert into sm_role(id,code,name,status,type) values(#{id},#{code},#{name},'0','01')
    </insert>

    <update id="updateSmRole" parameterType="net.northking.iacmp.imp.domain.SmRole">
        update sm_role
        <trim prefix="SET" suffixOverrides=",">
            <if test="code != null  and code != ''  ">CODE = #{code},</if>
            <if test="name != null  and name != ''  ">NAME = #{name},</if>
            <if test="status != null  ">STATUS = #{status},</if>
            <if test="type != null  and type != ''  ">TYPE = #{type},</if>
            <if test="grad != null  ">GRAD = #{grad},</if>
            <if test="htmlContent != null  and htmlContent != ''  ">HTML_CONTENT = #{htmlContent},</if>
            <if test="roleId != null  ">ROLE_ID = #{roleId},</if>
        </trim>
        where ID = #{id}
    </update>

    <delete id="deleteSmRoleById" parameterType="String">
        delete from sm_role where ID = #{roleId}
    </delete>

    <delete id="deleteSmRoleByIds" parameterType="String">
        delete from sm_role where ID in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>